{
  "problems": [
    {
      "name": "Two Sum",
      "param": "twosum",
      "difficulty": "Easy",
      "solutions": [
        {
          "solutionTitle": "Optimal Solution Using Complement",
          "solutionDescription": "This is the description for the solution",
          "code": [
            "var twoSum = function(nums, target) {",
            "  const map = {}",
            " ",
            "  for (let i = 0; i < nums.length; i++) {",
            "     const value = nums[i]",
            "     const complement = target - nums[i]",
            "     if (map[complement] !== undefined) {",
            "         return [map[complement], i]",
            "     } else {",
            "         map[value] = i",
            "     }",
            "  }",
            "};"
          ]
        }
      ]
    },
    {
      "name": "Valid Parens",
      "param": "validparens",
      "difficulty": "Easy"
    },
    {
      "name": "Add Two Numbers",
      "param": "addtwonumbers",
      "difficulty": "Medium"
    },
    {
      "name": "Reverse Linked List",
      "param": "reverselinkedlist",
      "difficulty": "Easy"
    },
    {
      "name": "Median of Two Sorted Arrays",
      "param": "medianoftwosortedarrays",
      "difficulty": "Hard"
    },
    {
      "name": "Merge Sorted Linked List",
      "param": "mergesortedlinkedlist",
      "difficulty": "Easy"
    },
    {
      "name": "Reverse Integer",
      "param": "reverseinteger",
      "difficulty": "Medium"
    },
    {
      "name": "Regular Expression Matching",
      "param": "regularexpressionmatching",
      "difficulty": "Hard"
    },
    {
      "name": "Palindrome Number",
      "param": "palindromenumber",
      "difficulty": "Easy"
    },
    {
      "name": "Palindrome Number",
      "param": "palindromenumber",
      "difficulty": "Easy"
    }
  ]
}